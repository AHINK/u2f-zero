C51 COMPILER V9.53.0.0   MAIN                                                              03/28/2016 20:19:13 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src/main.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/main.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SIZE) INTVECTOR
                    -(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;/home/pp/apps/
                    -u2f-zero/firmware/tinyprintf;/home/pp/apps/u2f-zero/firmware/tests;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3
                    -//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1;/home/pp/SimplicityStud
                    -io_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_usb/i
                    -nc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/peripheral_driver/inc;/home/pp/SimplicityStudio
                    -_v3/developer/sdks/si8051/v3//Lib/efm8_assert) REGFILE(u2f-firmware.ORC) PRINT(.\src/main.lst) COND PAGEWIDTH(120) PAGEL
                    -ENGTH(65) OBJECT(.\src/main.OBJ)

line level    source

   1          #include <SI_EFM8UB1_Register_Enums.h>
   2          #include <stdarg.h>
   3          
   4          #include "efm8_usb.h"
   5          #include "usb_0.h"
   6          #include "atecc508a.h"
   7          #include "InitDevice.h"
   8          #include "descriptors.h"
   9          #include "eeprom.h"
  10          #include "idle.h"
  11          #include "bsp.h"
  12          #include "app.h"
  13          #include "i2c.h"
  14          #include "u2f_hid.h"
  15          #include "u2f.h"
  16          #include "tests.h"
  17          
  18          data struct APP_DATA appdata;
  19          
  20          static void init(struct APP_DATA* ap)
  21          {
  22   1              memset(ap,0, sizeof(struct APP_DATA));
  23   1              u2f_hid_init();
  24   1              smb_init();
  25   1              atecc_idle();
  26   1      #ifndef ATECC_SETUP_DEVICE
  27   1              eeprom_init();
  28   1              u2f_init();
  29   1      #endif
  30   1              U2F_BUTTON_VAL = 1;
  31   1      }
  32          
  33          void set_app_error(APP_ERROR_CODE ec)
  34          {
  35   1              appdata.error = ec;
  36   1      }
  37          
  38          void set_app_u2f_hid_msg(struct u2f_hid_msg * msg )
  39          {
  40   1              appdata.state = APP_HID_MSG;
  41   1              appdata.hid_msg = msg;
  42   1      }
  43          
  44          
  45          //void dump_eeprom()
  46          //{
  47          //      // 0xF800 - 0xFB7F
  48          //      uint16_t i = 0xF800;
C51 COMPILER V9.53.0.0   MAIN                                                              03/28/2016 20:19:13 PAGE 2   

  49          //      uint8_t eep;
  50          //      for (; i <= 0xF800 + 4 * 16; i++)
  51          //      {
  52          //              eeprom_read(i,&eep,1);
  53          //              u2f_putb(eep);
  54          //              u2f_prints(" ");
  55          //      }
  56          //      u2f_prints("\r\n");
  57          //}
  58          
  59          int8_t test_app()
  60          {
  61   1              //u2f_printl("count: ",1,u2f_count());
  62   1              return 0;
  63   1      }
  64          
  65          #define ms_since(ms,num) (((uint16_t)get_ms() - (ms)) >= num ? (1|(ms=(uint16_t)get_ms())):0)
  66          
  67          
  68          
  69          int16_t main(void) {
  70   1      
  71   1              data uint8_t i = 0;
  72   1              data uint16_t last_ms = get_ms();
  73   1              data uint16_t ms_heart;
  74   1              data uint16_t ms_wink;
  75   1              data uint8_t winks = 0;
  76   1              uint8_t leds = 0;
  77   1              uint16_t button = 0;
  78   1      
  79   1              enter_DefaultMode_from_RESET();
  80   1              init(&appdata);
  81   1      
  82   1              // STDIO library requires TI to print
  83   1              SCON0_TI = 1;
  84   1      
  85   1              // Enable interrupts
  86   1              IE_EA = 1;
  87   1      
  88   1              u2f_prints("U2F ZERO\r\n");
  89   1      
  90   1              run_tests();
  91   1              atecc_setup_init(appdata.tmp);
  92   1      
  93   1      
  94   1              while (1) {
  95   2      
  96   2                      if (ms_since(ms_heart,500))
  97   2                      {
  98   3                              u2f_printl("ms ", 1, get_ms());
  99   3                              button = U2F_BUTTON;
 100   3                              u2f_printx("button: ",1,button);
 101   3                              LED_G = !LED_G;
 102   3                              test_app();
 103   3                      }
 104   2      
 105   2      
 106   2                      if (!USBD_EpIsBusy(EP1OUT) && !USBD_EpIsBusy(EP1IN) && appdata.state != APP_HID_MSG)
 107   2                      {
 108   3                              USBD_Read(EP1OUT, hidmsgbuf, sizeof(hidmsgbuf), true);
 109   3                              // u2f_prints("read added\r\n");
 110   3                      }
 111   2      
C51 COMPILER V9.53.0.0   MAIN                                                              03/28/2016 20:19:13 PAGE 3   

 112   2                      switch(appdata.state)
 113   2                      {
 114   3                              case APP_NOTHING:
 115   3                                      break;
 116   3                              case APP_HID_MSG:
 117   3      #ifndef ATECC_SETUP_DEVICE
 118   3                                      u2f_hid_request(appdata.hid_msg);
 119   3      #else
                                              atecc_setup_device((struct config_msg*)appdata.hid_msg);
              #endif
 122   3                                      if (appdata.state == APP_HID_MSG)
 123   3                                              appdata.state = APP_NOTHING;
 124   3                                      break;
 125   3                              case APP_WINK:
 126   3                                      LED_B = 0;
 127   3                                      ms_wink = get_ms();
 128   3                                      appdata.state = _APP_WINK;
 129   3                                      break;
 130   3                              case _APP_WINK:
 131   3                                      LED_G = 1;
 132   3                                      LED_R = 1;
 133   3                                      if (ms_since(ms_wink,150))
 134   3                                      {
 135   4                                              LED_B = !LED_B;
 136   4                                              winks++;
 137   4                                      }
 138   3                                      if (winks == 5)
 139   3                                      {
 140   4                                              winks = 0;
 141   4                                              appdata.state = APP_NOTHING;
 142   4                                      }
 143   3                                      break;
 144   3                      }
 145   2      
 146   2                      if (appdata.error)
 147   2                      {
 148   3                              u2f_printb("error: ", 1, appdata.error);
 149   3                              appdata.error = 0;
 150   3                      }
 151   2      
 152   2      
 153   2              }
 154   1      }
 155          
 156          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    369    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     75       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

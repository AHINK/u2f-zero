C51 COMPILER V9.53.0.0   BSP                                                               03/29/2016 00:06:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE BSP
OBJECT MODULE PLACED IN .\src/bsp.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/bsp.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SIZE) INTVECTOR(
                    -0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;/home/pp/apps/u
                    -2f-zero/firmware/tests;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/shared/si8051Base;/home/pp/Simplici
                    -tyStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8U
                    -B1/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_usb/inc;/home/pp/SimplicityStudio_v3/developer/sd
                    -ks/si8051/v3//Device/EFM8UB1/peripheral_driver/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_asser
                    -t) REGFILE(u2f-firmware.ORC) PRINT(.\src/bsp.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/bsp.OBJ)

line level    source

   1          /*
   2           * bsp.c
   3           *
   4           */
   5          #include <SI_EFM8UB1_Register_Enums.h>
   6          #include <efm8_usb.h>
   7          #include <stdarg.h>
   8          #include <stdio.h>
   9          #include "app.h"
  10          #include "bsp.h"
  11          
  12          
  13          void u2f_delay(uint16_t ms) {
*** WARNING C235 IN LINE 13 OF /home/pp/apps/u2f-zero/firmware/src/bsp.c: parameter 1: different types
  14   1              uint32_t ms_now = get_ms();
  15   1              while((get_ms() - ms_now) < ms)
  16   1              {}
  17   1      }
  18          
  19          void usb_write(uint8_t* buf, uint8_t len)
  20          {
  21   1              int16_t ec;
  22   1              uint8_t errors = 0;
  23   1              while (USB_STATUS_OK != (ec=USBD_Write(EP1IN, buf, len, false)))
  24   1              {
  25   2                      u2f_delay(2);
  26   2                      if (errors++ > 30)
  27   2                      {
  28   3                              u2f_printd("USB error",1, -ec);
  29   3                              break;
  30   3                      }
  31   2              }
  32   1      }
  33          
  34          
  35          #ifdef U2F_PRINT
  36          
  37          void putf(char c)
  38          {
  39   1              uint8_t i;
  40   1              SBUF0 = c;
  41   1              for (i=0; i<200; i++){}
  42   1              for (i=0; i<200; i++){}
  43   1              for (i=0; i<200; i++){}
  44   1      }
  45          
  46          
  47          void dump_hex(uint8_t* hex, uint8_t len)
  48          {
C51 COMPILER V9.53.0.0   BSP                                                               03/29/2016 00:06:39 PAGE 2   

  49   1              uint8_t i;
  50   1              for (i=0 ; i < len ; i++)
  51   1              {
  52   2                      if (hex[i]<0x10)
  53   2                      {
  54   3                              putf('0');
  55   3                      }
  56   2                      u2f_putb(hex[i]);
  57   2              }
  58   1              u2f_prints("\r\n");
  59   1      }
  60          
  61          
  62          void u2f_prints(char* d)
  63          {
  64   1              static SI_SEG_DATA uint16_t i;
  65   1              while(*d)
  66   1              {
  67   2                      // UART0 output queue
  68   2                      putf(*d++);
  69   2      
  70   2              }
  71   1      }
*** WARNING C280 IN LINE 64 OF /home/pp/apps/u2f-zero/firmware/src/bsp.c: 'i': unreferenced local variable
  72          
  73          static void int2str_reduce_10(char ** snum, uint32_t copy)
  74          {
  75   1          do
  76   1          {
  77   2              *snum++;
*** WARNING C275 IN LINE 77 OF /home/pp/apps/u2f-zero/firmware/src/bsp.c: expression with possibly no effect
  78   2              copy /= 10;
  79   2          }while(copy);
  80   1      }
  81          
  82          static void int2str_reduce_16(char ** snum, uint32_t copy)
  83          {
  84   1          do
  85   1          {
  86   2              *snum++;
*** WARNING C275 IN LINE 86 OF /home/pp/apps/u2f-zero/firmware/src/bsp.c: expression with possibly no effect
  87   2              copy >>= 4;
  88   2          }while(copy);
  89   1      }
  90          
  91          static const char * __digits = "0123456789abcdef";
  92          static char __int2str_buf[9];
  93          
  94          static void int2str_map_10(char ** snum, uint32_t i)
  95          {
  96   1          do
  97   1          {
  98   2              *--*snum = __digits[i % 10];
  99   2              i /= 10;
 100   2          }while(i);
 101   1      }
 102          
 103          static void int2str_map_16(char ** snum, uint32_t i)
 104          {
 105   1          do
 106   1          {
 107   2              *--*snum = __digits[i & 0xf];
 108   2              i >>= 4;
C51 COMPILER V9.53.0.0   BSP                                                               03/29/2016 00:06:39 PAGE 3   

 109   2          }while(i);
 110   1      }
 111          
 112          #define dint2str(i)     __int2str10(i)
 113          #define xint2str(i)     __int2str16(i)
 114          
 115          char * __int2str10(int32_t i)
 116          {
 117   1          char * snum = __int2str_buf;
 118   1          if (i<0) *snum++ = '-';
 119   1          int2str_reduce_10(&snum, i);
 120   1          *snum = '\0';
 121   1          int2str_map_10(&snum, i);
 122   1          return snum;
 123   1      }
 124          
 125          char * __int2str16(int32_t i)
 126          {
 127   1          char * snum = __int2str_buf;
 128   1          if (i<0) *snum++ = '-';
 129   1          int2str_reduce_16(&snum, i);
 130   1          *snum = '\0';
 131   1          int2str_map_16(&snum, i);
 132   1          return snum;
 133   1      }
 134          
 135          
 136          void u2f_putb(uint8_t i)
 137          {
 138   1          u2f_prints(xint2str((uint32_t)i));
 139   1      }
 140          
 141          void u2f_putd(int16_t i)
 142          {
 143   1              u2f_prints(dint2str((int32_t)i));
 144   1      }
 145          
 146          void u2f_putx(uint16_t i)
 147          {
 148   1              u2f_prints(xint2str((int32_t)i));
 149   1      }
 150          
 151          void u2f_putl(int32_t i)
 152          {
 153   1              u2f_prints(dint2str((int32_t)i));
 154   1      }
 155          void u2f_putlx(int32_t i)
 156          {
 157   1              u2f_prints(xint2str((int32_t)i));
 158   1      }
 159          
 160          void u2f_printd(const char * tag, uint8_t c, ...)
 161          {
 162   1              va_list args;
 163   1              u2f_prints(tag);
 164   1          va_start(args,c);
 165   1          while(c--)
 166   1          {
 167   2              u2f_putd(va_arg(args, int16_t));
 168   2              u2f_prints(" ");
 169   2          }
 170   1          u2f_prints("\r\n");
 171   1          va_end(args);
C51 COMPILER V9.53.0.0   BSP                                                               03/29/2016 00:06:39 PAGE 4   

 172   1      }
 173          
 174          void u2f_printl(const char * tag, uint8_t c, ...)
 175          {
 176   1          va_list args;
 177   1          u2f_prints(tag);
 178   1          va_start(args,c);
 179   1          while(c--)
 180   1          {
 181   2              u2f_putl(va_arg(args, int32_t));
 182   2              u2f_prints(" ");
 183   2          }
 184   1          u2f_prints("\r\n");
 185   1          va_end(args);
 186   1      }
 187          
 188          void u2f_printx(const char * tag, uint8_t c, ...)
 189          {
 190   1          va_list args;
 191   1          u2f_prints(tag);
 192   1          va_start(args,c);
 193   1          while(c--)
 194   1          {
 195   2              u2f_putx(va_arg(args, uint16_t));
 196   2              u2f_prints(" ");
 197   2          }
 198   1          u2f_prints("\r\n");
 199   1          va_end(args);
 200   1      }
 201          
 202          void u2f_printb(const char * tag, uint8_t c, ...)
 203          {
 204   1              va_list args;
 205   1          u2f_prints(tag);
 206   1          va_start(args,c);
 207   1          while(c--)
 208   1          {
 209   2              u2f_putb(va_arg(args, uint8_t));
 210   2              u2f_prints(" ");
 211   2          }
 212   1          u2f_prints("\r\n");
 213   1          va_end(args);
 214   1      }
 215          
 216          void u2f_printlx(const char * tag, uint8_t c, ...)
 217          {
 218   1          va_list args;
 219   1          u2f_prints(tag);
 220   1          va_start(args,c);
 221   1          while(c--)
 222   1          {
 223   2              u2f_putlx(va_arg(args, int32_t));
 224   2              u2f_prints(" ");
 225   2          }
 226   1          u2f_prints("\r\n");
 227   1          va_end(args);
 228   1      }
 229          
 230          #else
              
              
              
              
C51 COMPILER V9.53.0.0   BSP                                                               03/29/2016 00:06:39 PAGE 5   

              #endif
 236          
 237          
 238          
 239          
 240          
 241          
 242          
 243          
 244          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1056    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     12     291
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)

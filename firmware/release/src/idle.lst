C51 COMPILER V9.53.0.0   IDLE                                                              03/28/2016 20:17:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE IDLE
OBJECT MODULE PLACED IN .\src/idle.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/idle.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SIZE) INTVECTOR
                    -(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;/home/pp/apps/
                    -u2f-zero/firmware/tinyprintf;/home/pp/apps/u2f-zero/firmware/tests;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3
                    -//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1;/home/pp/SimplicityStud
                    -io_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_usb/i
                    -nc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/peripheral_driver/inc;/home/pp/SimplicityStudio
                    -_v3/developer/sdks/si8051/v3//Lib/efm8_assert) REGFILE(u2f-firmware.ORC) PRINT(.\src/idle.lst) COND PAGEWIDTH(120) PAGEL
                    -ENGTH(65) OBJECT(.\src/idle.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2015 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          
   7          #include "si_toolchain.h"
   8          #include "idle.h"
   9          
  10          // ----------------------------------------------------------------------------
  11          // Variables
  12          // ----------------------------------------------------------------------------
  13          static idleTimer_TypeDef idle;
  14          
  15          // ----------------------------------------------------------------------------
  16          // Functions
  17          // ----------------------------------------------------------------------------
  18          
  19          void idleTimerStart(void)
  20          {
  21   1        if (idle.rate > 0)
  22   1        {
  23   2          idle.timer = idle.rate * 4;
  24   2        }
  25   1        else
  26   1        {
  27   2          idle.timer = POLL_RATE;
  28   2        }
  29   1      }
  30          
  31          bool isIdleTimerIndefinite(void)
  32          {
  33   1        if (idle.rate == 0)
  34   1        {
  35   2          return 1;
  36   2        }
  37   1        else
  38   1        {
  39   2          return 0;
  40   2        }
  41   1      }
  42          bool isIdleTimerExpired(void)
  43          {
  44   1        if (idle.timer == 0)
  45   1        {
  46   2          idleTimerStart();
  47   2          return 1;
  48   2        }
C51 COMPILER V9.53.0.0   IDLE                                                              03/28/2016 20:17:25 PAGE 2   

  49   1        return 0;
  50   1      }
  51          
  52          void idleTimerSet(uint8_t rate)
  53          {
  54   1        if ((rate != 0) && (rate < (POLL_RATE / 4)))
  55   1        {
  56   2          idle.rate = POLL_RATE / 4;
  57   2        }
  58   1        else
  59   1        {
  60   2          idle.rate = rate;
  61   2        }
  62   1      
  63   1        idleTimerStart();
  64   1      }
  65          
  66          void idleTimerTick(void)
  67          {
  68   1        if (idle.timer > 0)
  69   1        {
  70   2          idle.timer--;
  71   2        }
  72   1      }
  73          
  74          uint8_t idleGetRate(void)
  75          {
  76   1        return idle.rate;
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

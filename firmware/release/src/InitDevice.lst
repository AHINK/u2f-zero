C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/InitDevice.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SIZE) INT
                    -VECTOR(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;/home/pp
                    -/apps/u2f-zero/firmware/tinyprintf;/home/pp/apps/u2f-zero/firmware/tests;/home/pp/SimplicityStudio_v3/developer/sdks/si8
                    -051/v3//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1;/home/pp/Simplici
                    -tyStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8
                    -_usb/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/peripheral_driver/inc;/home/pp/Simplicity
                    -Studio_v3/developer/sdks/si8051/v3//Lib/efm8_assert) REGFILE(u2f-firmware.ORC) PRINT(.\src/InitDevice.lst) COND PAGEWIDT
                    -H(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          #include "efm8_usb.h"
  18          #include "descriptors.h"
  19          #include "usb_0.h"
  20          // [Library Includes]$
  21          
  22          //==============================================================================
  23          // enter_DefaultMode_from_RESET
  24          //==============================================================================
  25          extern void enter_DefaultMode_from_RESET(void) {
  26   1              // $[Config Calls]
  27   1              // Save the SFRPAGE
  28   1              uint8_t SFRPAGE_save = SFRPAGE;
  29   1              WDT_0_enter_DefaultMode_from_RESET();
  30   1              VREG_0_enter_DefaultMode_from_RESET();
  31   1              PORTS_0_enter_DefaultMode_from_RESET();
  32   1              PORTS_1_enter_DefaultMode_from_RESET();
  33   1              PBCFG_0_enter_DefaultMode_from_RESET();
  34   1              CIP51_0_enter_DefaultMode_from_RESET();
  35   1              CLOCK_0_enter_DefaultMode_from_RESET();
  36   1              TIMER01_0_enter_DefaultMode_from_RESET();
  37   1              TIMER16_2_enter_DefaultMode_from_RESET();
  38   1              TIMER16_3_enter_DefaultMode_from_RESET();
  39   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  40   1              SMBUS_0_enter_DefaultMode_from_RESET();
  41   1              UART_0_enter_DefaultMode_from_RESET();
  42   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  43   1              USBLIB_0_enter_DefaultMode_from_RESET();
  44   1              // Restore the SFRPAGE
  45   1              SFRPAGE = SFRPAGE_save;
  46   1              // [Config Calls]$
  47   1      
  48   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 2   

  49          
  50          //================================================================================
  51          // WDT_0_enter_DefaultMode_from_RESET
  52          //================================================================================
  53          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  54   1              // $[WDTCN - Watchdog Timer Control]
  55   1              SFRPAGE = 0x00;
  56   1              //Disable Watchdog with key sequence
  57   1              WDTCN = 0xDE; //First key
  58   1              WDTCN = 0xAD; //Second key
  59   1              // [WDTCN - Watchdog Timer Control]$
  60   1      
  61   1      }
  62          
  63          //================================================================================
  64          // VREG_0_enter_DefaultMode_from_RESET
  65          //================================================================================
  66          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
  67   1              // $[REG0CN - Voltage Regulator 0 Control]
  68   1              // [REG0CN - Voltage Regulator 0 Control]$
  69   1      
  70   1              // $[REG1CN - Voltage Regulator 1 Control]
  71   1              /*
  72   1               // REG1ENB (Voltage Regulator 1 Disable) = ENABLED (Regulator is
  73   1               //     enabled.)
  74   1               // BIASENB (Regulator Bias Disable) = DISABLED (Regulator bias is
  75   1               //     disabled.)
  76   1               // SUSEN (Voltage Regulator 1 Suspend Enable) = NORMAL (The 5V regulator
  77   1               //     is in normal power mode. Normal mode is the highest performance mode
  78   1               //     for the regulator.)
  79   1               */
  80   1              SFRPAGE = 0x20;
  81   1              REG1CN = REG1CN_REG1ENB__ENABLED | REG1CN_BIASENB__DISABLED
  82   1                              | REG1CN_SUSEN__NORMAL;
  83   1              // [REG1CN - Voltage Regulator 1 Control]$
  84   1      
  85   1      }
  86          
  87          //================================================================================
  88          // PORTS_0_enter_DefaultMode_from_RESET
  89          //================================================================================
  90          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  91   1              // $[P0 - Port 0 Pin Latch]
  92   1              /*
  93   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  94   1               //     float high.)
  95   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  96   1               //     float high.)
  97   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  98   1               //     float high.)
  99   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
 100   1               //     float high.)
 101   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
 102   1               //     float high.)
 103   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
 104   1               //     float high.)
 105   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
 106   1               //     float high.)
 107   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
 108   1               //     float high.)
 109   1               */
 110   1              SFRPAGE = 0x00;
 111   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 3   

 112   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
 113   1              // [P0 - Port 0 Pin Latch]$
 114   1      
 115   1              // $[P0MDOUT - Port 0 Output Mode]
 116   1              /*
 117   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 118   1               //     drain.)
 119   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 120   1               //     drain.)
 121   1               // B2 (Port 0 Bit 2 Output Mode) = PUSH_PULL (P0.2 output is push-pull.)
 122   1               // B3 (Port 0 Bit 3 Output Mode) = PUSH_PULL (P0.3 output is push-pull.)
 123   1               // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
 124   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 125   1               //     drain.)
 126   1               // B6 (Port 0 Bit 6 Output Mode) = PUSH_PULL (P0.6 output is push-pull.)
 127   1               // B7 (Port 0 Bit 7 Output Mode) = PUSH_PULL (P0.7 output is push-pull.)
 128   1               */
 129   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 130   1                              | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__PUSH_PULL
 131   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 132   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__PUSH_PULL;
 133   1              // [P0MDOUT - Port 0 Output Mode]$
 134   1      
 135   1              // $[P0MDIN - Port 0 Input Mode]
 136   1              /*
 137   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 138   1               //     digital mode.)
 139   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 140   1               //     digital mode.)
 141   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 142   1               //     digital mode.)
 143   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 144   1               //     digital mode.)
 145   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 146   1               //     digital mode.)
 147   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 148   1               //     digital mode.)
 149   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 150   1               //     digital mode.)
 151   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 152   1               //     digital mode.)
 153   1               */
 154   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 155   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 156   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 157   1              // [P0MDIN - Port 0 Input Mode]$
 158   1      
 159   1              // $[P0SKIP - Port 0 Skip]
 160   1              /*
 161   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 162   1               //     crossbar.)
 163   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 164   1               //     crossbar.)
 165   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 166   1               //     crossbar.)
 167   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 168   1               //     crossbar.)
 169   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 170   1               //     crossbar.)
 171   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 172   1               //     crossbar.)
 173   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 174   1               //     crossbar.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 4   

 175   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 176   1               //     crossbar.)
 177   1               */
 178   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 179   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 180   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 181   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 182   1              // [P0SKIP - Port 0 Skip]$
 183   1      
 184   1              // $[P0MASK - Port 0 Mask]
 185   1              /*
 186   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 187   1               //     ignored and will not cause a port mismatch event.)
 188   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 189   1               //     ignored and will not cause a port mismatch event.)
 190   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 191   1               //     ignored and will not cause a port mismatch event.)
 192   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 193   1               //     ignored and will not cause a port mismatch event.)
 194   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 195   1               //     ignored and will not cause a port mismatch event.)
 196   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 197   1               //     ignored and will not cause a port mismatch event.)
 198   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 199   1               //     ignored and will not cause a port mismatch event.)
 200   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 201   1               //     ignored and will not cause a port mismatch event.)
 202   1               */
 203   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
 204   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 205   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 206   1              // [P0MASK - Port 0 Mask]$
 207   1      
 208   1              // $[P0MAT - Port 0 Match]
 209   1              /*
 210   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 211   1               //     with logic HIGH.)
 212   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 213   1               //     with logic HIGH.)
 214   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 215   1               //     with logic HIGH.)
 216   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 217   1               //     with logic HIGH.)
 218   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 219   1               //     with logic HIGH.)
 220   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 221   1               //     with logic HIGH.)
 222   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 223   1               //     with logic HIGH.)
 224   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 225   1               //     with logic HIGH.)
 226   1               */
 227   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 228   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 229   1              // [P0MAT - Port 0 Match]$
 230   1      
 231   1      }
 232          
 233          //================================================================================
 234          // PORTS_1_enter_DefaultMode_from_RESET
 235          //================================================================================
 236          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 237   1              // $[P1 - Port 1 Pin Latch]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 5   

 238   1              /*
 239   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 240   1               //     float high.)
 241   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 242   1               //     float high.)
 243   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 244   1               //     float high.)
 245   1               */
 246   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH;
 247   1              // [P1 - Port 1 Pin Latch]$
 248   1      
 249   1              // $[P1MDOUT - Port 1 Output Mode]
 250   1              /*
 251   1               // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 252   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 253   1               //     drain.)
 254   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 255   1               //     drain.)
 256   1               */
 257   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 258   1                              | P1MDOUT_B2__OPEN_DRAIN;
 259   1              // [P1MDOUT - Port 1 Output Mode]$
 260   1      
 261   1              // $[P1MDIN - Port 1 Input Mode]
 262   1              /*
 263   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 264   1               //     digital mode.)
 265   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 266   1               //     digital mode.)
 267   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 268   1               //     digital mode.)
 269   1               */
 270   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL;
 271   1              // [P1MDIN - Port 1 Input Mode]$
 272   1      
 273   1              // $[P1SKIP - Port 1 Skip]
 274   1              /*
 275   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 276   1               //     crossbar.)
 277   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 278   1               //     crossbar.)
 279   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 280   1               //     crossbar.)
 281   1               */
 282   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 283   1                              | P1SKIP_B2__NOT_SKIPPED;
 284   1              // [P1SKIP - Port 1 Skip]$
 285   1      
 286   1              // $[P1MASK - Port 1 Mask]
 287   1              /*
 288   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 289   1               //     ignored and will not cause a port mismatch event.)
 290   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 291   1               //     ignored and will not cause a port mismatch event.)
 292   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 293   1               //     ignored and will not cause a port mismatch event.)
 294   1               */
 295   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED;
 296   1              // [P1MASK - Port 1 Mask]$
 297   1      
 298   1              // $[P1MAT - Port 1 Match]
 299   1              /*
 300   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 6   

 301   1               //     with logic HIGH.)
 302   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 303   1               //     with logic HIGH.)
 304   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 305   1               //     with logic HIGH.)
 306   1               */
 307   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH;
 308   1              // [P1MAT - Port 1 Match]$
 309   1      
 310   1      }
 311          
 312          //================================================================================
 313          // PORTS_2_enter_DefaultMode_from_RESET
 314          //================================================================================
 315          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 316   1              // $[P2 - Port 2 Pin Latch]
 317   1              /*
 318   1               // B0 (Port 2 Bit 0 Latch) = HIGH (P2.0 is high. Set P2.0 to drive or
 319   1               //     float high.)
 320   1               */
 321   1              P2 = P2_B0__HIGH;
 322   1              // [P2 - Port 2 Pin Latch]$
 323   1      
 324   1              // $[P2MDOUT - Port 2 Output Mode]
 325   1              /*
 326   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 327   1               //     drain.)
 328   1               */
 329   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN;
 330   1              // [P2MDOUT - Port 2 Output Mode]$
 331   1      
 332   1              // $[P2MDIN - Port 2 Input Mode]
 333   1              /*
 334   1               // B0 (Port 2 Bit 0 Input Mode) = DIGITAL (P2.0 pin is configured for
 335   1               //     digital mode.)
 336   1               */
 337   1              SFRPAGE = 0x20;
 338   1              P2MDIN = P2MDIN_B0__DIGITAL;
 339   1              // [P2MDIN - Port 2 Input Mode]$
 340   1      
 341   1              // $[P2SKIP - Port 2 Skip]
 342   1              /*
 343   1               // B0 (Port 2 Bit 0 Skip) = SKIPPED (P2.0 pin is skipped by the
 344   1               //     crossbar.)
 345   1               */
 346   1              P2SKIP = P2SKIP_B0__SKIPPED;
 347   1              // [P2SKIP - Port 2 Skip]$
 348   1      
 349   1              // $[P2MASK - Port 2 Mask]
 350   1              /*
 351   1               // B0 (Port 2 Bit 0 Mask Value) = IGNORED (P2.0 pin logic value is
 352   1               //     ignored and will not cause a port mismatch event.)
 353   1               */
 354   1              P2MASK = P2MASK_B0__IGNORED;
 355   1              // [P2MASK - Port 2 Mask]$
 356   1      
 357   1              // $[P2MAT - Port 2 Match]
 358   1              /*
 359   1               // B0 (Port 2 Bit 0 Match Value) = HIGH (P2.0 pin logic value is compared
 360   1               //     with logic HIGH.)
 361   1               */
 362   1              P2MAT = P2MAT_B0__HIGH;
 363   1              // [P2MAT - Port 2 Match]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 7   

 364   1      
 365   1      }
 366          
 367          //================================================================================
 368          // PBCFG_0_enter_DefaultMode_from_RESET
 369          //================================================================================
 370          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 371   1              // $[XBR2 - Port I/O Crossbar 2]
 372   1              /*
 373   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 374   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 375   1               //     mode).)
 376   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 377   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 378   1               //     pin.)
 379   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 380   1               //     at Port pin.)
 381   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 382   1               //     at Port pin.)
 383   1               */
 384   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 385   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 386   1                              | XBR2_URT1CTSE__DISABLED;
 387   1              // [XBR2 - Port I/O Crossbar 2]$
 388   1      
 389   1              // $[PRTDRV - Port Drive Strength]
 390   1              // [PRTDRV - Port Drive Strength]$
 391   1      
 392   1              // $[XBR0 - Port I/O Crossbar 0]
 393   1              /*
 394   1               // URT0E (UART0 I/O Enable) = ENABLED (UART0 TX0, RX0 routed to Port pins
 395   1               //     P0.4 and P0.5.)
 396   1               // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 397   1               // SMB0E (SMB0 I/O Enable) = ENABLED (SMBus 0 I/O routed to Port pins.)
 398   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 399   1               //     pin.)
 400   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 401   1               //     (Asynchronous CP0 unavailable at Port pin.)
 402   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 403   1               //     pin.)
 404   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 405   1               //     (Asynchronous CP1 unavailable at Port pin.)
 406   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 407   1               //     pin.)
 408   1               */
 409   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 410   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 411   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 412   1              // [XBR0 - Port I/O Crossbar 0]$
 413   1      
 414   1              // $[XBR1 - Port I/O Crossbar 1]
 415   1              // [XBR1 - Port I/O Crossbar 1]$
 416   1      
 417   1      }
 418          
 419          //================================================================================
 420          // CIP51_0_enter_DefaultMode_from_RESET
 421          //================================================================================
 422          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 423   1              // $[PFE0CN - Prefetch Engine Control]
 424   1              /*
 425   1               // PFEN (Prefetch Enable) = ENABLED (Enable the prefetch engine (SYSCLK >
 426   1               //     25 MHz).)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 8   

 427   1               // FLRT (Flash Read Timing) = SYSCLK_BELOW_50_MHZ (SYSCLK < 50 MHz.)
 428   1               */
 429   1              SFRPAGE = 0x10;
 430   1              PFE0CN = PFE0CN_PFEN__ENABLED | PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 431   1              // [PFE0CN - Prefetch Engine Control]$
 432   1      
 433   1      }
 434          
 435          //================================================================================
 436          // CLOCK_0_enter_DefaultMode_from_RESET
 437          //================================================================================
 438          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 439   1              // $[HFOSC1 Setup]
 440   1              // Ensure SYSCLK is > 24 MHz before switching to HFOSC1
 441   1              SFRPAGE = 0x00;
 442   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 443   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 444   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 445   1                      ;
 446   1              // [HFOSC1 Setup]$
 447   1      
 448   1              // $[CLKSEL - Clock Select]
 449   1              /*
 450   1               // CLKSL (Clock Source Select) = HFOSC1 (Clock derived from the Internal
 451   1               //     High Frequency Oscillator 1.)
 452   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 453   1               //     selected clock source divided by 1.)
 454   1               // CLKSL (Clock Source Select) = HFOSC1 (Clock derived from the Internal
 455   1               //     High Frequency Oscillator 1.)
 456   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 457   1               //     selected clock source divided by 1.)
 458   1               */
 459   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 460   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 461   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 462   1                      ;
 463   1              // [CLKSEL - Clock Select]$
 464   1      
 465   1      }
 466          
 467          //================================================================================
 468          // TIMER01_0_enter_DefaultMode_from_RESET
 469          //================================================================================
 470          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 471   1              // $[Timer Initialization]
 472   1              //Save Timer Configuration
 473   1              uint8_t TCON_save;
 474   1              TCON_save = TCON;
 475   1              //Stop Timers
 476   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 477   1      
 478   1              // [Timer Initialization]$
 479   1      
 480   1              // $[TH0 - Timer 0 High Byte]
 481   1              // [TH0 - Timer 0 High Byte]$
 482   1      
 483   1              // $[TL0 - Timer 0 Low Byte]
 484   1              // [TL0 - Timer 0 Low Byte]$
 485   1      
 486   1              // $[TH1 - Timer 1 High Byte]
 487   1              /*
 488   1               // TH1 (Timer 1 High Byte) = 0x30
 489   1               */
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 9   

 490   1              TH1 = (0x30 << TH1_TH1__SHIFT);
 491   1              // [TH1 - Timer 1 High Byte]$
 492   1      
 493   1              // $[TL1 - Timer 1 Low Byte]
 494   1              // [TL1 - Timer 1 Low Byte]$
 495   1      
 496   1              // $[Timer Restoration]
 497   1              //Restore Timer Configuration
 498   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 499   1      
 500   1              // [Timer Restoration]$
 501   1      
 502   1      }
 503          
 504          //================================================================================
 505          // TIMER16_2_enter_DefaultMode_from_RESET
 506          //================================================================================
 507          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 508   1              // $[Timer Initialization]
 509   1              // Save Timer Configuration
 510   1              uint8_t TMR2CN0_TR2_save;
 511   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 512   1              // Stop Timer
 513   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 514   1              // [Timer Initialization]$
 515   1      
 516   1              // $[TMR2CN1 - Timer 2 Control 1]
 517   1              // [TMR2CN1 - Timer 2 Control 1]$
 518   1      
 519   1              // $[TMR2CN0 - Timer 2 Control]
 520   1              // [TMR2CN0 - Timer 2 Control]$
 521   1      
 522   1              // $[TMR2H - Timer 2 High Byte]
 523   1              // [TMR2H - Timer 2 High Byte]$
 524   1      
 525   1              // $[TMR2L - Timer 2 Low Byte]
 526   1              // [TMR2L - Timer 2 Low Byte]$
 527   1      
 528   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 529   1              /*
 530   1               // TMR2RLH (Timer 2 Reload High Byte) = 0x44
 531   1               */
 532   1              TMR2RLH = (0x44 << TMR2RLH_TMR2RLH__SHIFT);
 533   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 534   1      
 535   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 536   1              /*
 537   1               // TMR2RLL (Timer 2 Reload Low Byte) = 0x80
 538   1               */
 539   1              TMR2RLL = (0x80 << TMR2RLL_TMR2RLL__SHIFT);
 540   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 541   1      
 542   1              // $[TMR2CN0]
 543   1              /*
 544   1               // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 545   1               */
 546   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 547   1              // [TMR2CN0]$
 548   1      
 549   1              // $[Timer Restoration]
 550   1              // Restore Timer Configuration
 551   1              TMR2CN0 |= TMR2CN0_TR2_save;
 552   1              // [Timer Restoration]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 10  

 553   1      
 554   1      }
 555          
 556          //================================================================================
 557          // TIMER16_3_enter_DefaultMode_from_RESET
 558          //================================================================================
 559          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 560   1              // $[Timer Initialization]
 561   1              // Save Timer Configuration
 562   1              uint8_t TMR3CN0_TR3_save;
 563   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 564   1              // Stop Timer
 565   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 566   1              // [Timer Initialization]$
 567   1      
 568   1              // $[TMR3CN1 - Timer 3 Control 1]
 569   1              // [TMR3CN1 - Timer 3 Control 1]$
 570   1      
 571   1              // $[TMR3CN0 - Timer 3 Control]
 572   1              // [TMR3CN0 - Timer 3 Control]$
 573   1      
 574   1              // $[TMR3H - Timer 3 High Byte]
 575   1              // [TMR3H - Timer 3 High Byte]$
 576   1      
 577   1              // $[TMR3L - Timer 3 Low Byte]
 578   1              // [TMR3L - Timer 3 Low Byte]$
 579   1      
 580   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 581   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 582   1      
 583   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 584   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 585   1      
 586   1              // $[TMR3CN0]
 587   1              /*
 588   1               // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 589   1               */
 590   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 591   1              // [TMR3CN0]$
 592   1      
 593   1              // $[Timer Restoration]
 594   1              // Restore Timer Configuration
 595   1              TMR3CN0 |= TMR3CN0_TR3_save;
 596   1              // [Timer Restoration]$
 597   1      
 598   1      }
 599          
 600          //================================================================================
 601          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 602          //================================================================================
 603          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 604   1              // $[CKCON0 - Clock Control 0]
 605   1              /*
 606   1               // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 607   1               // T0M (Timer 0 Clock Select) = SYSCLK (Counter/Timer 0 uses the system
 608   1               //     clock.)
 609   1               // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 610   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 611   1               // T2ML (Timer 2 Low Byte Clock Select) = SYSCLK (Timer 2 low byte uses
 612   1               //     the system clock.)
 613   1               // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 614   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 615   1               // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 11  

 616   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 617   1               // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 618   1               */
 619   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__SYSCLK
 620   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__SYSCLK
 621   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 622   1                              | CKCON0_T1M__SYSCLK;
 623   1              // [CKCON0 - Clock Control 0]$
 624   1      
 625   1              // $[CKCON1 - Clock Control 1]
 626   1              // [CKCON1 - Clock Control 1]$
 627   1      
 628   1              // $[TMOD - Timer 0/1 Mode]
 629   1              /*
 630   1               // T0M (Timer 0 Mode Select) = MODE1 (Mode 1, 16-bit Counter/Timer)
 631   1               // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 632   1               //     Auto-Reload)
 633   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 634   1               //     on the clock defined by T0M in the CKCON0 register.)
 635   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 636   1               //     irrespective of INT0 logic level.)
 637   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 638   1               //     on the clock defined by T1M in the CKCON0 register.)
 639   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 640   1               //     irrespective of INT1 logic level.)
 641   1               */
 642   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 643   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 644   1              // [TMOD - Timer 0/1 Mode]$
 645   1      
 646   1              // $[TCON - Timer 0/1 Control]
 647   1              /*
 648   1               // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 649   1               */
 650   1              TCON |= TCON_TR1__RUN;
 651   1              // [TCON - Timer 0/1 Control]$
 652   1      
 653   1      }
 654          
 655          //================================================================================
 656          // SMBUS_0_enter_DefaultMode_from_RESET
 657          //================================================================================
 658          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 659   1              // $[SMB0ADR - SMBus 0 Slave Address]
 660   1              // [SMB0ADR - SMBus 0 Slave Address]$
 661   1      
 662   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 663   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 664   1      
 665   1              // $[SMB0TC - SMBus 0 Timing and Pin Control]
 666   1              // [SMB0TC - SMBus 0 Timing and Pin Control]$
 667   1      
 668   1              // $[SMB0CF - SMBus 0 Configuration]
 669   1              /*
 670   1               // SMBCS (SMBus Clock Source Selection) = TIMER2_LOW (Timer 2 Low Byte
 671   1               //     Overflow.)
 672   1               // ENSMB (SMBus Enable) = ENABLED (Enable the SMBus module.)
 673   1               // SMBFTE (SMBus Free Timeout Detection Enable) = FREE_TO_ENABLED (Enable
 674   1               //     bus free timeouts. The bus the bus will be considered free if SCL and
 675   1               //     SDA remain high for more than 10 SMBus clock source periods.)
 676   1               // SMBTOE (SMBus SCL Timeout Detection Enable) = SCL_TO_ENABLED (Enable
 677   1               //     SCL low timeouts.)
 678   1               // EXTHOLD (SMBus Setup and Hold Time Extension Enable) = ENABLED (Enable
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 12  

 679   1               //     SDA extended setup and hold times.)
 680   1               */
 681   1              SMB0CF |= SMB0CF_SMBCS__TIMER2_LOW | SMB0CF_ENSMB__ENABLED
 682   1                              | SMB0CF_SMBFTE__FREE_TO_ENABLED | SMB0CF_SMBTOE__SCL_TO_ENABLED
 683   1                              | SMB0CF_EXTHOLD__ENABLED;
 684   1              // [SMB0CF - SMBus 0 Configuration]$
 685   1      
 686   1      }
 687          
 688          //================================================================================
 689          // UART_0_enter_DefaultMode_from_RESET
 690          //================================================================================
 691          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 692   1              // $[SCON0 - UART0 Serial Port Control]
 693   1              /*
 694   1               // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 695   1               */
 696   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 697   1              // [SCON0 - UART0 Serial Port Control]$
 698   1      
 699   1      }
 700          
 701          //================================================================================
 702          // INTERRUPT_0_enter_DefaultMode_from_RESET
 703          //================================================================================
 704          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 705   1              // $[EIE1 - Extended Interrupt Enable 1]
 706   1              /*
 707   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 708   1               //     ADC0 Conversion Complete interrupt.)
 709   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 710   1               //     ADC0 Window Comparison interrupt.)
 711   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 712   1               //     interrupts.)
 713   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 714   1               //     interrupts.)
 715   1               // EMAT (Port Match Interrupts Enable) = DISABLED (Disable all Port Match
 716   1               //     interrupts.)
 717   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 718   1               //     (Disable all PCA0 interrupts.)
 719   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = ENABLED (Enable interrupt
 720   1               //     requests generated by SMB0.)
 721   1               // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 722   1               //     generated by the TF3L or TF3H flags.)
 723   1               */
 724   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 725   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 726   1                              | EIE1_ESMB0__ENABLED | EIE1_ET3__ENABLED;
 727   1              // [EIE1 - Extended Interrupt Enable 1]$
 728   1      
 729   1              // $[EIE2 - Extended Interrupt Enable 2]
 730   1              // [EIE2 - Extended Interrupt Enable 2]$
 731   1      
 732   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 733   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 734   1      
 735   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 736   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 737   1      
 738   1              // $[EIP2 - Extended Interrupt Priority 2]
 739   1              // [EIP2 - Extended Interrupt Priority 2]$
 740   1      
 741   1              // $[EIP2H - Extended Interrupt Priority 2 High]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/28/2016 20:17:24 PAGE 13  

 742   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 743   1      
 744   1              // $[IE - Interrupt Enable]
 745   1              /*
 746   1               // EA (All Interrupts Enable) = ENABLED (Enable each interrupt according
 747   1               //     to its individual mask setting.)
 748   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 749   1               //     interrupt 0.)
 750   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 751   1               //     interrupt 1.)
 752   1               // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 753   1               //     interrupts.)
 754   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 755   1               //     interrupt.)
 756   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 757   1               //     interrupt.)
 758   1               // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 759   1               //     generated by the TF2L or TF2H flags.)
 760   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 761   1               */
 762   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 763   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 764   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 765   1              // [IE - Interrupt Enable]$
 766   1      
 767   1              // $[IP - Interrupt Priority]
 768   1              // [IP - Interrupt Priority]$
 769   1      
 770   1              // $[IPH - Interrupt Priority High]
 771   1              // [IPH - Interrupt Priority High]$
 772   1      
 773   1      }
 774          
 775          //================================================================================
 776          // USBLIB_0_enter_DefaultMode_from_RESET
 777          //================================================================================
 778          extern void USBLIB_0_enter_DefaultMode_from_RESET(void) {
 779   1              // $[USBD Init]
 780   1              USBD_Init (&initstruct);
 781   1              // [USBD Init]$
 782   1      
 783   1      }
 784          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

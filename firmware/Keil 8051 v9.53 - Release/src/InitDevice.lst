C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) IN
                    -TVECTOR(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;/home/p
                    -p/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/developer/sdks/si8
                    -051/v3//Device/EFM8UB1;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/SimplicityStud
                    -io_v3/developer/sdks/si8051/v3//Lib/efm8_usb/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/p
                    -eripheral_driver/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_assert) REGFILE(u2f-firmware.ORC) P
                    -RINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          #include "efm8_usb.h"
  18          #include "descriptors.h"
  19          #include "usb_0.h"
  20          // [Library Includes]$
  21          
  22          //==============================================================================
  23          // enter_DefaultMode_from_RESET
  24          //==============================================================================
  25          extern void enter_DefaultMode_from_RESET(void) {
  26   1              // $[Config Calls]
  27   1              // Save the SFRPAGE
  28   1              uint8_t SFRPAGE_save = SFRPAGE;
  29   1              WDT_0_enter_DefaultMode_from_RESET();
  30   1              VREG_0_enter_DefaultMode_from_RESET();
  31   1              PORTS_0_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              CIP51_0_enter_DefaultMode_from_RESET();
  34   1              CLOCK_0_enter_DefaultMode_from_RESET();
  35   1              TIMER01_0_enter_DefaultMode_from_RESET();
  36   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  37   1              UART_0_enter_DefaultMode_from_RESET();
  38   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  39   1              USBLIB_0_enter_DefaultMode_from_RESET();
  40   1              // Restore the SFRPAGE
  41   1              SFRPAGE = SFRPAGE_save;
  42   1              // [Config Calls]$
  43   1      
  44   1      }
  45          
  46          //================================================================================
  47          // WDT_0_enter_DefaultMode_from_RESET
  48          //================================================================================
  49          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 2   

  50   1              // $[WDTCN - Watchdog Timer Control]
  51   1              SFRPAGE = 0x00;
  52   1              //Disable Watchdog with key sequence
  53   1              WDTCN = 0xDE; //First key
  54   1              WDTCN = 0xAD; //Second key
  55   1              // [WDTCN - Watchdog Timer Control]$
  56   1      
  57   1      }
  58          
  59          //================================================================================
  60          // VREG_0_enter_DefaultMode_from_RESET
  61          //================================================================================
  62          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
  63   1              // $[REG0CN - Voltage Regulator 0 Control]
  64   1              // [REG0CN - Voltage Regulator 0 Control]$
  65   1      
  66   1              // $[REG1CN - Voltage Regulator 1 Control]
  67   1              /*
  68   1               // REG1ENB (Voltage Regulator 1 Disable) = ENABLED (Regulator is
  69   1               //     enabled.)
  70   1               // BIASENB (Regulator Bias Disable) = DISABLED (Regulator bias is
  71   1               //     disabled.)
  72   1               // SUSEN (Voltage Regulator 1 Suspend Enable) = NORMAL (The 5V regulator
  73   1               //     is in normal power mode. Normal mode is the highest performance mode
  74   1               //     for the regulator.)
  75   1               */
  76   1              SFRPAGE = 0x20;
  77   1              REG1CN = REG1CN_REG1ENB__ENABLED | REG1CN_BIASENB__DISABLED
  78   1                              | REG1CN_SUSEN__NORMAL;
  79   1              // [REG1CN - Voltage Regulator 1 Control]$
  80   1      
  81   1      }
  82          
  83          //================================================================================
  84          // PORTS_0_enter_DefaultMode_from_RESET
  85          //================================================================================
  86          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  87   1              // $[P0 - Port 0 Pin Latch]
  88   1              /*
  89   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  90   1               //     float high.)
  91   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  92   1               //     float high.)
  93   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  94   1               //     float high.)
  95   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  96   1               //     float high.)
  97   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  98   1               //     float high.)
  99   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
 100   1               //     float high.)
 101   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
 102   1               //     float high.)
 103   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
 104   1               //     float high.)
 105   1               */
 106   1              SFRPAGE = 0x00;
 107   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
 108   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
 109   1              // [P0 - Port 0 Pin Latch]$
 110   1      
 111   1              // $[P0MDOUT - Port 0 Output Mode]
 112   1              /*
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 3   

 113   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
 114   1               //     drain.)
 115   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
 116   1               //     drain.)
 117   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
 118   1               //     drain.)
 119   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
 120   1               //     drain.)
 121   1               // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
 122   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 123   1               //     drain.)
 124   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
 125   1               //     drain.)
 126   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 127   1               //     drain.)
 128   1               */
 129   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 130   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 131   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 132   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 133   1              // [P0MDOUT - Port 0 Output Mode]$
 134   1      
 135   1              // $[P0MDIN - Port 0 Input Mode]
 136   1              /*
 137   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 138   1               //     digital mode.)
 139   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 140   1               //     digital mode.)
 141   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 142   1               //     digital mode.)
 143   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 144   1               //     digital mode.)
 145   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 146   1               //     digital mode.)
 147   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 148   1               //     digital mode.)
 149   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 150   1               //     digital mode.)
 151   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 152   1               //     digital mode.)
 153   1               */
 154   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 155   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 156   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 157   1              // [P0MDIN - Port 0 Input Mode]$
 158   1      
 159   1              // $[P0SKIP - Port 0 Skip]
 160   1              /*
 161   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 162   1               //     crossbar.)
 163   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 164   1               //     crossbar.)
 165   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 166   1               //     crossbar.)
 167   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 168   1               //     crossbar.)
 169   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 170   1               //     crossbar.)
 171   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 172   1               //     crossbar.)
 173   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 174   1               //     crossbar.)
 175   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 4   

 176   1               //     crossbar.)
 177   1               */
 178   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 179   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 180   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 181   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 182   1              // [P0SKIP - Port 0 Skip]$
 183   1      
 184   1              // $[P0MASK - Port 0 Mask]
 185   1              /*
 186   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 187   1               //     ignored and will not cause a port mismatch event.)
 188   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 189   1               //     ignored and will not cause a port mismatch event.)
 190   1               // B2 (Port 0 Bit 2 Mask Value) = COMPARED (P0.2 pin logic value is
 191   1               //     compared to P0MAT.2.)
 192   1               // B3 (Port 0 Bit 3 Mask Value) = COMPARED (P0.3 pin logic value is
 193   1               //     compared to P0MAT.3.)
 194   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 195   1               //     ignored and will not cause a port mismatch event.)
 196   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 197   1               //     ignored and will not cause a port mismatch event.)
 198   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 199   1               //     ignored and will not cause a port mismatch event.)
 200   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 201   1               //     ignored and will not cause a port mismatch event.)
 202   1               */
 203   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 204   1                              | P0MASK_B3__COMPARED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 205   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 206   1              // [P0MASK - Port 0 Mask]$
 207   1      
 208   1              // $[P0MAT - Port 0 Match]
 209   1              /*
 210   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 211   1               //     with logic HIGH.)
 212   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 213   1               //     with logic HIGH.)
 214   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 215   1               //     with logic HIGH.)
 216   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 217   1               //     with logic HIGH.)
 218   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 219   1               //     with logic HIGH.)
 220   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 221   1               //     with logic HIGH.)
 222   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 223   1               //     with logic HIGH.)
 224   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 225   1               //     with logic HIGH.)
 226   1               */
 227   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 228   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 229   1              // [P0MAT - Port 0 Match]$
 230   1      
 231   1      }
 232          
 233          //================================================================================
 234          // PBCFG_0_enter_DefaultMode_from_RESET
 235          //================================================================================
 236          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 237   1              // $[XBR2 - Port I/O Crossbar 2]
 238   1              /*
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 5   

 239   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 240   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 241   1               //     mode).)
 242   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 243   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 244   1               //     pin.)
 245   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 246   1               //     at Port pin.)
 247   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 248   1               //     at Port pin.)
 249   1               */
 250   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 251   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 252   1                              | XBR2_URT1CTSE__DISABLED;
 253   1              // [XBR2 - Port I/O Crossbar 2]$
 254   1      
 255   1              // $[PRTDRV - Port Drive Strength]
 256   1              // [PRTDRV - Port Drive Strength]$
 257   1      
 258   1              // $[XBR0 - Port I/O Crossbar 0]
 259   1              /*
 260   1               // URT0E (UART0 I/O Enable) = ENABLED (UART0 TX0, RX0 routed to Port pins
 261   1               //     P0.4 and P0.5.)
 262   1               // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 263   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 264   1               //     pins.)
 265   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 266   1               //     pin.)
 267   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 268   1               //     (Asynchronous CP0 unavailable at Port pin.)
 269   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 270   1               //     pin.)
 271   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 272   1               //     (Asynchronous CP1 unavailable at Port pin.)
 273   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 274   1               //     pin.)
 275   1               */
 276   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 277   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 278   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 279   1              // [XBR0 - Port I/O Crossbar 0]$
 280   1      
 281   1              // $[XBR1 - Port I/O Crossbar 1]
 282   1              // [XBR1 - Port I/O Crossbar 1]$
 283   1      
 284   1      }
 285          
 286          //================================================================================
 287          // CIP51_0_enter_DefaultMode_from_RESET
 288          //================================================================================
 289          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 290   1              // $[PFE0CN - Prefetch Engine Control]
 291   1              /*
 292   1               // PFEN (Prefetch Enable) = ENABLED (Enable the prefetch engine (SYSCLK >
 293   1               //     25 MHz).)
 294   1               // FLRT (Flash Read Timing) = SYSCLK_BELOW_50_MHZ (SYSCLK < 50 MHz.)
 295   1               */
 296   1              SFRPAGE = 0x10;
 297   1              PFE0CN = PFE0CN_PFEN__ENABLED | PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 298   1              // [PFE0CN - Prefetch Engine Control]$
 299   1      
 300   1      }
 301          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 6   

 302          //================================================================================
 303          // CLOCK_0_enter_DefaultMode_from_RESET
 304          //================================================================================
 305          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 306   1              // $[HFOSC1 Setup]
 307   1              // Ensure SYSCLK is > 24 MHz before switching to HFOSC1
 308   1              SFRPAGE = 0x00;
 309   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 310   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 311   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 312   1                      ;
 313   1              // [HFOSC1 Setup]$
 314   1      
 315   1              // $[CLKSEL - Clock Select]
 316   1              /*
 317   1               // CLKSL (Clock Source Select) = HFOSC1 (Clock derived from the Internal
 318   1               //     High Frequency Oscillator 1.)
 319   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 320   1               //     selected clock source divided by 1.)
 321   1               // CLKSL (Clock Source Select) = HFOSC1 (Clock derived from the Internal
 322   1               //     High Frequency Oscillator 1.)
 323   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 324   1               //     selected clock source divided by 1.)
 325   1               */
 326   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 327   1              CLKSEL = CLKSEL_CLKSL__HFOSC1 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 328   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 329   1                      ;
 330   1              // [CLKSEL - Clock Select]$
 331   1      
 332   1      }
 333          
 334          //================================================================================
 335          // TIMER01_0_enter_DefaultMode_from_RESET
 336          //================================================================================
 337          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 338   1              // $[Timer Initialization]
 339   1              //Save Timer Configuration
 340   1              uint8_t TCON_save;
 341   1              TCON_save = TCON;
 342   1              //Stop Timers
 343   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 344   1      
 345   1              // [Timer Initialization]$
 346   1      
 347   1              // $[TH0 - Timer 0 High Byte]
 348   1              // [TH0 - Timer 0 High Byte]$
 349   1      
 350   1              // $[TL0 - Timer 0 Low Byte]
 351   1              // [TL0 - Timer 0 Low Byte]$
 352   1      
 353   1              // $[TH1 - Timer 1 High Byte]
 354   1              /*
 355   1               // TH1 (Timer 1 High Byte) = 0x30
 356   1               */
 357   1              TH1 = (0x30 << TH1_TH1__SHIFT);
 358   1              // [TH1 - Timer 1 High Byte]$
 359   1      
 360   1              // $[TL1 - Timer 1 Low Byte]
 361   1              // [TL1 - Timer 1 Low Byte]$
 362   1      
 363   1              // $[Timer Restoration]
 364   1              //Restore Timer Configuration
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 7   

 365   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 366   1      
 367   1              // [Timer Restoration]$
 368   1      
 369   1      }
 370          
 371          //================================================================================
 372          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 373          //================================================================================
 374          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 375   1              // $[CKCON0 - Clock Control 0]
 376   1              /*
 377   1               // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 378   1               // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 379   1               //     defined by the prescale field, SCA.)
 380   1               // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 381   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 382   1               // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 383   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 384   1               // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 385   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 386   1               // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 387   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 388   1               // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 389   1               */
 390   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 391   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 392   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 393   1                              | CKCON0_T1M__SYSCLK;
 394   1              // [CKCON0 - Clock Control 0]$
 395   1      
 396   1              // $[CKCON1 - Clock Control 1]
 397   1              // [CKCON1 - Clock Control 1]$
 398   1      
 399   1              // $[TMOD - Timer 0/1 Mode]
 400   1              /*
 401   1               // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 402   1               // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 403   1               //     Auto-Reload)
 404   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 405   1               //     on the clock defined by T0M in the CKCON0 register.)
 406   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 407   1               //     irrespective of INT0 logic level.)
 408   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 409   1               //     on the clock defined by T1M in the CKCON0 register.)
 410   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 411   1               //     irrespective of INT1 logic level.)
 412   1               */
 413   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 414   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 415   1              // [TMOD - Timer 0/1 Mode]$
 416   1      
 417   1              // $[TCON - Timer 0/1 Control]
 418   1              /*
 419   1               // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 420   1               */
 421   1              TCON |= TCON_TR1__RUN;
 422   1              // [TCON - Timer 0/1 Control]$
 423   1      
 424   1      }
 425          
 426          //================================================================================
 427          // UART_0_enter_DefaultMode_from_RESET
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 8   

 428          //================================================================================
 429          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 430   1              // $[SCON0 - UART0 Serial Port Control]
 431   1              /*
 432   1               // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 433   1               */
 434   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 435   1              // [SCON0 - UART0 Serial Port Control]$
 436   1      
 437   1      }
 438          
 439          //================================================================================
 440          // INTERRUPT_0_enter_DefaultMode_from_RESET
 441          //================================================================================
 442          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 443   1              // $[EIE1 - Extended Interrupt Enable 1]
 444   1              /*
 445   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 446   1               //     ADC0 Conversion Complete interrupt.)
 447   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 448   1               //     ADC0 Window Comparison interrupt.)
 449   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 450   1               //     interrupts.)
 451   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 452   1               //     interrupts.)
 453   1               // EMAT (Port Match Interrupts Enable) = ENABLED (Enable interrupt
 454   1               //     requests generated by a Port Match.)
 455   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 456   1               //     (Disable all PCA0 interrupts.)
 457   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 458   1               //     interrupts.)
 459   1               // ET3 (Timer 3 Interrupt Enable) = DISABLED (Disable Timer 3
 460   1               //     interrupts.)
 461   1               */
 462   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 463   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 464   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 465   1              // [EIE1 - Extended Interrupt Enable 1]$
 466   1      
 467   1              // $[EIE2 - Extended Interrupt Enable 2]
 468   1              // [EIE2 - Extended Interrupt Enable 2]$
 469   1      
 470   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 471   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 472   1      
 473   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 474   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 475   1      
 476   1              // $[EIP2 - Extended Interrupt Priority 2]
 477   1              // [EIP2 - Extended Interrupt Priority 2]$
 478   1      
 479   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 480   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 481   1      
 482   1              // $[IE - Interrupt Enable]
 483   1              /*
 484   1               // EA (All Interrupts Enable) = ENABLED (Enable each interrupt according
 485   1               //     to its individual mask setting.)
 486   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 487   1               //     interrupt 0.)
 488   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 489   1               //     interrupt 1.)
 490   1               // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        01/24/2016 17:34:24 PAGE 9   

 491   1               //     interrupts.)
 492   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 493   1               //     interrupt.)
 494   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 495   1               //     interrupt.)
 496   1               // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 497   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 498   1               */
 499   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 500   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 501   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 502   1              // [IE - Interrupt Enable]$
 503   1      
 504   1              // $[IP - Interrupt Priority]
 505   1              // [IP - Interrupt Priority]$
 506   1      
 507   1              // $[IPH - Interrupt Priority High]
 508   1              // [IPH - Interrupt Priority High]$
 509   1      
 510   1      }
 511          
 512          //================================================================================
 513          // USBLIB_0_enter_DefaultMode_from_RESET
 514          //================================================================================
 515          extern void USBLIB_0_enter_DefaultMode_from_RESET(void) {
 516   1              // $[USBD Init]
 517   1              USBD_Init (&initstruct);
 518   1              // [USBD Init]$
 519   1      
 520   1      }
 521          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.53.0.0   U2F_FIRMWARE_MAIN                                                 01/24/2016 18:13:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE U2F_FIRMWARE_MAIN
OBJECT MODULE PLACED IN .\src/u2f-firmware_main.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/firmware/src/u2f-firmware_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SP
                    -EED) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/firmware/inc/config;/home/pp/apps/u2f-zero/firmware/inc;
                    -/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/developer/s
                    -dks/si8051/v3//Device/EFM8UB1;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/Simplic
                    -ityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_usb/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EF
                    -M8UB1/peripheral_driver/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_assert) REGFILE(u2f-firmware
                    -.ORC) PRINT(.\src/u2f-firmware_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/u2f-firmware_main.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // main.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // This program enumerates as a USB keyboard. Each time a button is pressed
  10          // a character is sent to the host. A series of presses will spell out
  11          // "HID Keyboard ". The status of the Caps Lock and Num Lock on the host will
  12          // be indicated by the color of the LED.
  13          //
  14          // Resources:
  15          // SYSCLK - 48 MHz HFOSC1 / 1
  16          // USB0   - Full speed
  17          // P0.2 - push button
  18          // P0.3 - push button
  19          // P2.3 - Display enable
  20          //
  21          //-----------------------------------------------------------------------------
  22          // How To Test: EFM8UB1 STK
  23          //-----------------------------------------------------------------------------
  24          // 1) Place the switch in "AEM" mode.
  25          // 2) Connect the EFM8UB1 STK board to a PC using a mini USB cable.
  26          // 3) Compile and download code to the EFM8UB1 STK board.
  27          //    In Simplicity Studio IDE, select Run -> Debug from the menu bar,
  28          //    click the Debug button in the quick menu, or press F11.
  29          // 4) Run the code.
  30          //    In Simplicity Studio IDE, select Run -> Resume from the menu bar,
  31          //    click the Resume button in the quick menu, or press F8.
  32          // 5) The HID keyboard demo should start.
  33          // 6) Connect a micro USB cable from the PC to the STK.
  34          // 7) The device should enumerate on the PC as a HID keyboard.
  35          // 8) Press either push-button (PB0 or PB1) to send one character in the
  36          //    string "HID Keyboard ".
  37          // 9) Pressing Caps Lock or Num Lock on the host keyboard will change the color
  38          //    of the LED.
  39          //
  40          // Target:         EFM8UB1
  41          // Tool chain:     Generic
  42          //
  43          // Release 0.1 (JM)
  44          //    - Initial Revision
  45          //    - 26 JAN 2015
  46          //
  47          #include <SI_EFM8UB1_Register_Enums.h>
  48          #include <stdio.h>
  49          
C51 COMPILER V9.53.0.0   U2F_FIRMWARE_MAIN                                                 01/24/2016 18:13:24 PAGE 2   

  50          #include "efm8_usb.h"
  51          #include "usb_0.h"
  52          #include "descriptors.h"
  53          #include "idle.h"
  54          #include "bsp.h"
  55          #include "InitDevice.h"
  56          
  57          uint8_t keySeqNo = 0;        // Current position in report table.
  58          bool keyPushed = 0;          // Current pushbutton status.
  59          
  60          bool readpacket = 1;
  61          
  62          extern SI_SEGMENT_VARIABLE(thebuf1[64], uint8_t, SI_SEG_XDATA);
  63          
  64          void Delay(int16_t ms) {
  65   1              int16_t x;
  66   1              int16_t y;
  67   1              for (y = 0; y < ms; y++) {
  68   2                      for (x = 0; x < 1000; x) {
  69   3                              x++;
  70   3                      }
  71   2              }
  72   1      }
  73          SI_SEGMENT_VARIABLE(mybuf[64],
  75                          uint8_t,
  75                          SI_SEG_CODE);
  76          int16_t main(void) {
  77   1              int i = 0;
  78   1      
  79   1              enter_DefaultMode_from_RESET();
  80   1      
  81   1              SCON0_TI = 1;                       // This STDIO library requires TI to
  82   1                                                                                      // be set for prints to occur
  83   1              IE_EA = 1;
  84   1      
  85   1              printf("welcome \r\n");
  86   1      
  87   1              while (1) {
  88   2                      ++i;
  89   2      
  90   2                      printf("%d\r\n", i);
  91   2                      Delay(1000);
  92   2      
  93   2                      if (readpacket)
  94   2                      {
  95   3                              USBD_Read(EP1OUT, thebuf1, sizeof(thebuf1), true);
  96   3                              readpacket = 0;
  97   3                      }
  98   2      
  99   2              }
 100   1      }
 101          
 102          SI_INTERRUPT(PMATCH_IrqHandler, PMATCH_IRQn) {
 103   1              keyPushed = 1;
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    120    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
C51 COMPILER V9.53.0.0   U2F_FIRMWARE_MAIN                                                 01/24/2016 18:13:24 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

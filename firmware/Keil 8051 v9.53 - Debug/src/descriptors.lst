C51 COMPILER V9.53.0.0   DESCRIPTORS                                                       01/21/2016 23:19:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE DESCRIPTORS
OBJECT MODULE PLACED IN .\src/descriptors.OBJ
COMPILER INVOKED BY: Z:\home\pp\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /home/pp/apps/u2f-ze
                    -ro/u2f-firmware/src/descriptors.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEE
                    -D) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/pp/apps/u2f-zero/u2f-firmware/inc/config;/home/pp/apps/u2f-zero/u2f-firmwar
                    -e/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/shared/si8051Base;/home/pp/SimplicityStudio_v3/devel
                    -oper/sdks/si8051/v3//Device/EFM8UB1;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8UB1/inc;/home/pp/S
                    -implicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_usb/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Dev
                    -ice/EFM8UB1/peripheral_driver/inc;/home/pp/SimplicityStudio_v3/developer/sdks/si8051/v3//Lib/efm8_assert) PRINT(.\src/de
                    -scriptors.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/descriptors.OBJ)

line level    source

   1          /*******************************************************************************
   2          * @file descriptors.c
   3          * @brief USB descriptors.
   4          * @author PLACEHOLDER
   5          * @version PLACEHOLDER
   6          *******************************************************************************/
   7          //LICENSE PLACEHOLDER
   8          
   9          
  10          //=============================================================================
  11          // src/descriptors.c: generated by Hardware Configurator
  12          //
  13          // This file is only generated if it does not exist. Modifications in this file
  14          // will persist even if Configurator generates code. To refresh this file,
  15          // you must first delete it and then regenerate code.
  16          //=============================================================================
  17          
  18          //-----------------------------------------------------------------------------
  19          // Includes
  20          //-----------------------------------------------------------------------------
  21          #include <si_toolchain.h>
  22          #include <endian.h>
  23          #include <stdlib.h>
  24          #include <string.h>
  25          #include <efm8_usb.h>
  26          #include "descriptors.h"
  27          
  28          
  29          #ifdef __cplusplus
              extern "C" {
              #endif
  32          
  33          
  34          
  35          // HID Report Descriptor for Interface 0
  36          SI_SEGMENT_VARIABLE(ReportDescriptor0[69],
  38                              const uint8_t,
  38                              SI_SEG_CODE) =
  39          {
  40          
  41            0x05, 0x01,                      // USAGE_PAGE (Generic Desktop)
  42            0x09, 0x06,                      // USAGE (Keyboard)
  43            0xa1, 0x01,                      // COLLECTION (Application)
  44            0x05, 0x07,                      // USAGE_PAGE (Keyboard)
  45            0x19, 0xe0,                      // USAGE_MINIMUM (Keyboard LeftControl)
  46            0x29, 0xe7,                      // USAGE_MAXIMUM (Keyboard Right GUI)
  47            0x15, 0x00,                      // LOGICAL_MINIMUM (0)
  48            0x25, 0x01,                      // LOGICAL_MAXIMUM (1)
  49            0x75, 0x01,                      // REPORT_SIZE (1)
C51 COMPILER V9.53.0.0   DESCRIPTORS                                                       01/21/2016 23:19:39 PAGE 2   

  50            0x95, 0x08,                      // REPORT_COUNT (8)
  51            0x81, 0x02,                      // INPUT (Data,Var,Abs)
  52            0x15, 0x00,                      // LOGICAL_MINIMUM (0)
  53            0x25, 0x01,                      // LOGICAL_MAXIMUM (1)
  54            0x75, 0x01,                      // REPORT_SIZE (1)
  55            0x95, 0x08,                      // REPORT_COUNT (8)
  56            0x81, 0x01,                      // INPUT (Cnst,Ary,Abs)
  57            0x19, 0x00,                      // USAGE_MINIMUM (Reserved (no event indicated))
  58            0x29, 0x65,                      // USAGE_MAXIMUM (Keyboard Application)
  59            0x15, 0x00,                      // LOGICAL_MINIMUM (0)
  60            0x25, 0x65,                      // LOGICAL_MAXIMUM (101)
  61            0x75, 0x08,                      // REPORT_SIZE (8)
  62            0x95, 0x06,                      // REPORT_COUNT (6)
  63            0x81, 0x00,                      // INPUT (Data,Ary,Abs)
  64            0x05, 0x08,                      // USAGE_PAGE (LEDs)
  65            0x19, 0x01,                      // USAGE_MINIMUM (Num Lock)
  66            0x29, 0x03,                      // USAGE_MAXIMUM (Scroll Lock)
  67            0x15, 0x00,                      // LOGICAL_MINIMUM (0)
  68            0x25, 0x01,                      // LOGICAL_MAXIMUM (1)
  69            0x75, 0x01,                      // REPORT_SIZE (1)
  70            0x95, 0x03,                      // REPORT_COUNT (3)
  71            0x91, 0x02,                      // OUTPUT (Data,Var,Abs)
  72            0x75, 0x01,                      // REPORT_SIZE (1)
  73            0x95, 0x05,                      // REPORT_COUNT (5)
  74            0x91, 0x01,                      // OUTPUT (Cnst,Ary,Abs)
  75            0xc0                             // END_COLLECTION
  76          
  77          };
  78          
  79          SI_SEGMENT_VARIABLE(deviceDesc[],
  81                              const USB_DeviceDescriptor_TypeDef,
  81                              SI_SEG_CODE) =
  82          {
  83            USB_DEVICE_DESCSIZE,             // bLength
  84            USB_DEVICE_DESCRIPTOR,           // bLength
  85            htole16(0x0200),                 // bcdUSB
  86            0,                               // bDeviceClass
  87            0,                               // bDeviceSubClass
  88            0,                               // bDeviceProtocol
  89            64,                              // bMaxPacketSize
  90            USB_VENDOR_ID,                   // idVendor
  91            USB_PRODUCT_ID,                  // idProduct
  92            htole16(0x0100),                 // bcdDevice
  93            1,                               // iManufacturer
  94            2,                               // iProduct
  95            3,                               // iSerialNumber
  96            1,                               // bNumConfigurations
  97          };
  98          
  99          SI_SEGMENT_VARIABLE(configDesc[],
 101                              const uint8_t,
 101                              SI_SEG_CODE) =
 102          {
 103            USB_CONFIG_DESCSIZE,             // bLength
 104            USB_CONFIG_DESCRIPTOR,           // bLength
 105            0x22,                            // wTotalLength(LSB)
 106            0x00,                            // wTotalLength(MSB)
 107            1,                               // bNumInterfaces
 108            1,                               // bConfigurationValue
 109            0,                               // iConfiguration
 110          
 111            CONFIG_DESC_BM_RESERVED_D7 |     // bmAttrib: Self powered
 112            CONFIG_DESC_BM_SELFPOWERED,
C51 COMPILER V9.53.0.0   DESCRIPTORS                                                       01/21/2016 23:19:39 PAGE 3   

 113          
 114            CONFIG_DESC_MAXPOWER_mA(100),    // bMaxPower: 100 mA
 115          
 116            //Interface 0 Descriptor
 117            USB_INTERFACE_DESCSIZE,          // bLength
 118            USB_INTERFACE_DESCRIPTOR,        // bDescriptorType
 119            0,                               // bInterfaceNumber
 120            0,                               // bAlternateSetting
 121            1,                               // bNumEndpoints
 122            3,                               // bInterfaceClass: HID (Human Interface Device)
 123            0,                               // bInterfaceSubClass
 124            1,                               // bInterfaceProtocol
 125            0,                               // iInterface
 126          
 127            //HID Descriptor
 128            USB_HID_DESCSIZE,                // bLength
 129            USB_HID_DESCRIPTOR,              // bLength
 130            0x11,                            // bcdHID (LSB)
 131            0x01,                            // bcdHID (MSB)
 132            0,                               // bCountryCode
 133            1,                               // bNumDescriptors
 134            USB_HID_REPORT_DESCRIPTOR,       // bDescriptorType
 135            sizeof( ReportDescriptor0 ),     // wDescriptorLength(LSB)
 136            sizeof( ReportDescriptor0 )>>8,    // wDescriptorLength(MSB)
 137          
 138            //Endpoint 1 IN Descriptor
 139            USB_ENDPOINT_DESCSIZE,           // bLength
 140            USB_ENDPOINT_DESCRIPTOR,         // bDescriptorType
 141            0x81,                            // bEndpointAddress
 142            USB_EPTYPE_INTR,                 // bAttrib
 143            0x40,                            // wMaxPacketSize (LSB)
 144            0x00,                            // wMaxPacketSize (MSB)
 145            24,                              // bInterval
 146          };
 147          
 148          
 149          #define LANG_STRING   htole16( SLAB_USB_LANGUAGE )
 150          #define MFR_STRING                             "Silicon Laboratories"
 151          #define PROD_STRING                            "EFM8 HID Keyboard"
 152          #define SER_STRING                             "012345678ABCDEF"
 153          
 154          
 155          LANGID_STATIC_CONST_STRING_DESC( langDesc[], LANG_STRING );
 156          UTF16LE_PACKED_STATIC_CONST_STRING_DESC( mfrDesc[], MFR_STRING );
 157          UTF16LE_PACKED_STATIC_CONST_STRING_DESC( prodDesc[], PROD_STRING );
 158          UTF16LE_PACKED_STATIC_CONST_STRING_DESC( serDesc[], SER_STRING );
 159          
 160          //-----------------------------------------------------------------------------
 161          SI_SEGMENT_POINTER(myUsbStringTable_USEnglish[],
 163                             static const USB_StringDescriptor_TypeDef,
 163                             const SI_SEG_CODE) =
 164          {
 165            langDesc,
 166            mfrDesc,
 167            prodDesc,
 168            serDesc,
 169          
 170          };
 171          
 172          //-----------------------------------------------------------------------------
 173          SI_SEGMENT_VARIABLE(initstruct,
 175                              const USBD_Init_TypeDef,
 175                              SI_SEG_CODE) =
C51 COMPILER V9.53.0.0   DESCRIPTORS                                                       01/21/2016 23:19:39 PAGE 4   

 176          {
 177            deviceDesc,                                         // deviceDescriptor
 178            configDesc,                                         // configDescriptor
 179            myUsbStringTable_USEnglish,                         // stringDescriptors
 180            sizeof(myUsbStringTable_USEnglish) / sizeof(void *) // numberOfStrings
 181          };
 182          
 183          
 184          #ifdef __cplusplus
              }
              #endif
 187          
 188          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    211    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
